URI:                                     ##SLIPO-specific constraint: Specifies a URI of each POI; If needed, extra attribute "DATA_SOURCE" is used for constructing these URIs                
  entity: uri
  generateWith: keepOriginalID(ID)
DATA_SOURCE:                      ##SLIPO-specific constraint: Specifies the data source provider of each POI; Assuming that extra attribute "DATA_SOURCE" generated by TripleGeo is always used for constructing the URIs for data sources
  partOf: sourceInfo
  entity: source
  predicate: slipo:sourceRef
  generateWith: getDataSource     ##Function call to fill-in this value that does NOT exist in the original dataset
CATEGORY_URI:                     ##SLIPO-specific constraint: Specifies the URI for the category assigned to each POI; Assuming that extra attribute "CATEGORY_URI" generated by TripleGeo is always used for constructing the URIs for categories
  entity: category
  predicate: slipo:category
  datatype: uri
ID:
  partOf: sourceInfo
  entity: source
  predicate: slipo:poiRef
DateLastStatusUpdate:
  entity: lastUpdated
  predicate: slipo:lastUpdated  
  datatype: datetime
AddressInfo.ContactTelephone1:
  instanceOf: contact
  entity: phone1
  predicate: slipo:phone
  type: phone
AddressInfo.ContactTelephone2:
  instanceOf: contact
  entity: phone2
  predicate: slipo:phone
  type: phone  
OperatorInfo.PhonePrimaryContact:
  instanceOf: contact
  entity: operator_phone1
  predicate: slipo:phone
  type: phone  
OperatorInfo.PhoneSecondaryContact:
  instanceOf: contact
  entity: operator_phone2
  predicate: slipo:phone
  type: phone  
AddressInfo.ContactEmail:
  instanceOf: contact
  entity: email
  predicate: slipo:email
  type: email
OperatorInfo.ContactEmail:
  instanceOf: contact
  entity: operator_email
  predicate: slipo:email
  type: email  
GeneralComments:
  entity: description
  predicate: slipo:description 
AddressInfo.RelatedURL:
  entity: homepage
  predicate: slipo:homepage
  datatype: uri
OperatorInfo.Title:
  instanceOf: name
  entity: name
  predicate: slipo:name
  type: operator
AddressInfo.AddressLine1:
  partOf: address
  entity: address
  predicate: slipo:street
AddressInfo.AddressLine2:
  partOf: address
  entity: address
  predicate: slipo:crossStreet
AddressInfo.Town:
  partOf: address
  entity: address
  predicate: slipo:locality
AddressInfo.StateOrProvince:
  partOf: address
  entity: address
  predicate: slipo:region
AddressInfo.Country.Title:
  partOf: address
  entity: address
  predicate: slipo:country 
AddressInfo.Postcode:
  partOf: address
  entity: address
  predicate: slipo:postcode
AddressInfo.Longitude:
  entity: lon
  predicate: wgs84_pos:long
  datatype: float
AddressInfo.Latitude:
  entity: lat
  predicate: wgs84_pos:lat
  datatype: float
MediaItems.*.ItemURL:
  instanceOf: media
  predicate: slipo:media   
AddressInfo.AccessComments:
  predicate: slipo:EVaccessComments
NumberOfPoints:
  predicate: slipo:EVnumberOfPoints  
UsageType.IsMembershipRequired:
  predicate: slipo:EVisMembershipRequired
Connections.*.Quantity:                           #Wildcard '*' specifies that this property may appear multiple times; each appearance will be mapped to the same RDF property but will generate a separate triple
  predicate: slipo:EVquantity
Connections.*.Level.Title:
  predicate: slipo:EVlevel
Connections.*.StatusType.Title:
  predicate: slipo:EVstatusType
Connections.*.CurrentType.Title:
  predicate: slipo:EVcurrentType
Connections.*.CurrentType.Description:
  predicate: slipo:EVcurrentTypeDescription
Connections.*.ConnectionType.Title:
  predicate: slipo:EVconnectionType
Connections.*.ConnectionType.FormalName:
  predicate: slipo:EVconnectionFormalName
Connections.*.Level.Comments:
  predicate: slipo:EVcomments
Connections.*.Level.IsFastChargeCapable:
  predicate: slipo:EVisFastChargeCapable
Connections.*.Voltage:
  predicate: slipo:EVvoltage
Connections.*.Amps:
  predicate: slipo:EVamps  
Connections.*.PowerKW:
  predicate: slipo:EVpowerKW
UserComments.*.Rating:
  instanceOf: rating
  predicate: slipo:ratingCount 
_:                              ##SLIPO-specific directive in order to map any other attribute "as-is" using a pair of triples for its key and value      
  entity: otherAttr
  predicate: slipo:otherAttr